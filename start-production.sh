#!/bin/bash

echo "üöÄ Iniciando WhatsApp Sender em modo produ√ß√£o..."

# Verificar vari√°veis de ambiente obrigat√≥rias
if [ -z "$EVOLUTION_API_URL" ]; then
    echo "‚ùå EVOLUTION_API_URL n√£o definida"
    exit 1
fi

if [ -z "$EVOLUTION_API_KEY" ]; then
    echo "‚ùå EVOLUTION_API_KEY n√£o definida"
    exit 1
fi

if [ -z "$JWT_SECRET" ]; then
    echo "‚ùå JWT_SECRET n√£o definida"
    exit 1
fi

# Definir NODE_ENV se n√£o estiver definido
export NODE_ENV=${NODE_ENV:-production}

# Aplicar migra√ß√µes do banco
echo "üìä Aplicando migra√ß√µes do banco de dados..."
npx prisma db push

# Gerar cliente Prisma
echo "üîß Gerando cliente Prisma..."
npx prisma generate

# Verificar se existe usu√°rio admin
echo "üë§ Verificando usu√°rio admin..."
node -e "
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkAdmin() {
  const admin = await prisma.user.findFirst();
  if (!admin) {
    console.log('‚ö†Ô∏è Nenhum usu√°rio encontrado. Execute o script create-admin.js ap√≥s a inicializa√ß√£o.');
  } else {
    console.log('‚úÖ Usu√°rio admin encontrado');
  }
  await prisma.\$disconnect();
}

checkAdmin().catch(console.error);
"

# Criar diret√≥rios necess√°rios
mkdir -p uploads logs

echo "‚úÖ Configura√ß√£o conclu√≠da. Iniciando servidor..."

# Iniciar servidor
exec node src/server.js
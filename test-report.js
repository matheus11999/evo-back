const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function createTestInstance() {
  try {
    console.log('üß™ Criando inst√¢ncia de teste para relat√≥rios...');

    // Buscar uma campanha existente para identificar a inst√¢ncia usada
    const campaign = await prisma.campaign.findFirst({
      where: { status: 'ACTIVE' }
    });

    if (!campaign) {
      console.log('‚ùå Nenhuma campanha encontrada');
      return;
    }

    console.log(`üìù Campanha encontrada: ${campaign.name}`);

    // Criar inst√¢ncia de exemplo (use um n√∫mero de telefone real para teste)
    const testInstanceName = 'teste-relatorio';
    const testPhoneNumber = '5511999999999'; // SUBSTITUA PELO SEU N√öMERO

    try {
      const instance = await prisma.instance.create({
        data: {
          instanceName: testInstanceName,
          phoneNumber: testPhoneNumber,
          status: 'CONNECTED'
        }
      });

      console.log(`‚úÖ Inst√¢ncia de teste criada: ${instance.instanceName}`);
      console.log(`üì± N√∫mero configurado: ${instance.phoneNumber}`);

      // Atualizar a campanha para usar esta inst√¢ncia
      await prisma.campaign.update({
        where: { id: campaign.id },
        data: { instance: testInstanceName }
      });

      console.log(`‚úÖ Campanha "${campaign.name}" atualizada para usar a inst√¢ncia de teste`);
      console.log('');
      console.log('üéØ PR√ìXIMOS PASSOS:');
      console.log('1. Execute uma campanha');
      console.log(`2. O relat√≥rio ser√° enviado para: ${testPhoneNumber}`);
      console.log('3. Verifique seu WhatsApp para ver o relat√≥rio autom√°tico');
      console.log('');
      console.log('‚ö†Ô∏è IMPORTANTE: Substitua o n√∫mero de telefone no script antes de usar!');

    } catch (error) {
      if (error.code === 'P2002') {
        console.log('‚ö†Ô∏è Inst√¢ncia de teste j√° existe');
      } else {
        throw error;
      }
    }

  } catch (error) {
    console.error('‚ùå Erro ao criar inst√¢ncia de teste:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createTestInstance();